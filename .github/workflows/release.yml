name: release

on:
  push:
    tags:
      - 'v*.*.*'   # dispara por tag semântica (ex.: v0.1.3)

permissions:
  contents: read
  id-token: write  # necessário para --provenance

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      
      - run: pnpm install --frozen-lockfile
      
      - name: Validate tag vs package & compute should_publish
        id: meta
        working-directory: packages/precise-money
        run: |
          VERSION=$(node -p "require('./package.json').version")
          TAG="${GITHUB_REF_NAME#v}"
          echo "Package version: $VERSION, Tag: $TAG"
          if [ "$VERSION" != "$TAG" ]; then
            echo "::error::Version ($VERSION) differs from tag ($TAG)."
            exit 1
          fi
          if npm view precise-money@"$VERSION" version >/dev/null 2>&1; then
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION already on npm. Skipping publish."
          else
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Test (coverage)
        if: steps.meta.outputs.should_publish == 'true'
        working-directory: packages/precise-money
        run: pnpm exec vitest run --coverage

      - uses: actions/upload-artifact@v4
        if: steps.meta.outputs.should_publish == 'true'
        with:
          name: coverage
          path: |
            packages/precise-money/coverage/lcov.info
            packages/precise-money/coverage/**
          if-no-files-found: warn

      - name: Publish to npm
        if: steps.meta.outputs.should_publish == 'true'
        working-directory: packages/precise-money
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance

